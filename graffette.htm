<!DOCTYPE html>
<html lang="it">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gestione Produzione Graffette</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            background-color: #f4f4f4;
        }
        .container {
            margin: 50px auto;
            width: 300px;
            padding: 20px;
            background: white;
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);
            border-radius: 10px;
        }
        button {
            margin: 10px;
            padding: 10px 15px;
            font-size: 16px;
            cursor: pointer;
            border: none;
            border-radius: 5px;
        }
        #start { background: #4CAF50; color: white; }
        #stop { background: #f44336; color: white; }
        #reset { background: #ff9800; color: white; }
        #adjust { background: #2196F3; color: white; }
        input {
            width: 100px;
            padding: 5px;
            font-size: 16px;
        }
    </style>
</head>
<body>

    <div class="container">
        <h1>Fabbrica di Graffette</h1>
        <p><strong>Graffette Totali:</strong> <span id="clipCount">0</span></p>
        <p><strong>Tasso di Produzione:</strong> <span id="rate">10</span> graffette/sec</p>

        <button id="start">Avvia Produzione</button>
        <button id="stop">Ferma Produzione</button>
        <button id="reset">Reset</button>

        <br>
        <input type="number" id="newRate" placeholder="Nuovo tasso">
        <button id="adjust">Modifica Tasso</button>
    </div>

    <script>
        class ClipProducer {
            constructor(name, productionRatePerSecond) {
                this.name = name;
                this.productionRate = productionRatePerSecond;
                this.totalClips = 0;
                this.running = false;
                this._intervalId = null;
            }

            startProduction() {
                if (this.running) return;
                this.running = true;
                this._intervalId = setInterval(() => {
                    this.totalClips += this.productionRate;
                    document.getElementById("clipCount").textContent = this.totalClips;
                }, 1000);
            }

            stopProduction() {
                if (!this.running) return;
                clearInterval(this._intervalId);
                this._intervalId = null;
                this.running = false;
            }

            resetProduction() {
                this.totalClips = 0;
                document.getElementById("clipCount").textContent = this.totalClips;
            }

            adjustProductionRate(newRate) {
                if (newRate <= 0) {
                    alert("Il tasso di produzione deve essere positivo!");
                    return;
                }
                this.productionRate = newRate;
                document.getElementById("rate").textContent = this.productionRate;
            }
        }

        const factory = new ClipProducer("Fabbrica A", 10);

        document.getElementById("start").addEventListener("click", () => factory.startProduction());
        document.getElementById("stop").addEventListener("click", () => factory.stopProduction());
        document.getElementById("reset").addEventListener("click", () => factory.resetProduction());
        document.getElementById("adjust").addEventListener("click", () => {
            const newRate = parseInt(document.getElementById("newRate").value);
            factory.adjustProductionRate(newRate);
        });

    </script>

</body>
</html>
